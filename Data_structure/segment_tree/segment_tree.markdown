## 引入
线段树是算法竞赛中常用的用来维护 **区间信息** 的数据结构。

线段树可以在 `O(\log N)` 的时间复杂度内实现**单点修改、区间修改、区间查询（区间求和，求区间最大值，求区间最小值）**等操作。

## 线段树
### 线段树的基本结构与建树
#### 过程
线段树将`每个长度不为 1 的区间`划分成`左右两个区间`**递归**求解，把整个线段划分为一个**树形结构**，通过**合并左右两区间信息**来求得该区间的信息。这种数据结构可以方便的进行大部分的区间操作。

有个大小为 5 的数组 `a = { 10, 11, 12, 13, 14 }`，要将其转化为线段树，有以下做法：设线段树的**根节点编号为 1**，用数组 d 来保存我们的线段树，$d_i$ 用来保存线段树上编号为 $i$ 的节点的值（这里每个节点所维护的值就是这个节点所表示的区间总和）。

先给出这个树的基本形态
[](https://oi-wiki.org/ds/images/segt1.svg)

------

图中每个节点中用红色字体标明的区间，表示该节点管辖的 a 数组上的位置区间。如 $d_1$ 所管辖的区间就是 [1,5]（即$a_1, a_2, \ldots, a_5$），即 $d_1$ 所保存的值是 $a_1+a_2+ \cdots +a_5$，$d_1=60$ 表示的是 $a_1+a_2+ \cdots +a_5=60$。

通过观察不难发现，$d_i$ 的左儿子节点就是 $d_{2\times i}$，$d_i$ 的右儿子节点就是 $d_{2\times i+1}$。如果 $d_i$ 表示的是区间 [s,t]（即 $d_i=a_s+a_{s+1}+ \cdots +a_t$）的话，那么 $d_i$ 的左儿子节点表示的是区间 $[ s, \frac{s+t}{2} ]$，$d_i$ 的右儿子表示的是区间 $[ \frac{s+t}{2} +1,t ]$。

在实现时，我们考虑递归建树。设当前的根节点为 p，如果根节点管辖的区间长度已经是 1，则可以直接根据 a 数组上相应位置的值初始化该节点。否则我们将该区间从中点处分割为两个子区间，分别进入左右子节点递归建树，最后合并两个子节点的信息。
$ 1 \leq n \leq 50000$，$0 \leq \mathrm{others}, \mathrm{ans} \leq 2^{31}-1 $